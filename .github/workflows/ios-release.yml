name: Build and Distribute

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '3.27.3'
    
      - name: Setup Flutter Environment
        run: |
          flutter clean
          flutter pub get 
      
      # 清除 Xcode 缓存
      - name: Clean Xcode Cache
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData
          rm -rf ~/Library/Developer/Xcode/iOS\ DeviceSupport
          rm -rf ~/Library/Developer/Xcode/Archives
          rm -rf ~/Library/Developer/Xcode/Products
          
      # 添加 Xcode 版本选择
      - name: Select Xcode 16.2
        run: sudo xcode-select -s /Applications/Xcode_16.2.app
        
      # 设置 CocoaPods
      # - name: Setup CocoaPods
      #   run: |
      #     cd ios
      #     rm -rf Pods
      #     rm -f Podfile.lock
      #     pod install --repo-update
          
      # 添加详细的环境信息调试步骤
      - name: Print Environment Info
        run: |
          echo "============= Environment Variables ============="
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          FLUTTER_ROOT=$(which flutter | xargs dirname | xargs dirname)
          echo "FLUTTER_ROOT: $FLUTTER_ROOT"
          echo "FLUTTER_APPLICATION_PATH: $GITHUB_WORKSPACE"
          echo "Current Directory: $(pwd)"


      - uses: cedvdb/action-flutter-build-ios@v1
        with:
          build-cmd: |
            flutter build ipa --release --export-options-plist=ios/ExportOptions.plist --no-tree-shake-icons
          certificate-base64: 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


          certificate-password: 111111
          
          provisioning-profile-base64: 

          keychain-password: 111111

      # # 添加检查步骤
      - name: 检查构建文件
        run: |
          echo "检查 build/ios/ipa 目录内容："
          ls -la build/ios/ipa/
          echo "检查 build/ios 目录内容："
          ls -la build/ios/

      - name: Archive IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: build/ios/ipa


      - name: Upload to App Store using altool
        env:
          IPA_PATH: "build/ios/ipa/banto.ipa"
          APPLE_ID: "tangqisong@tradehubtech.shop"
          APP_SPECIFIC_PASSWORD: "lnkl-hupb-zkgj-wlsb"
        run: |
          xcrun altool --upload-app -f "$IPA_PATH" \
            -t ios \
            -u "$APPLE_ID" \
            -p "$APP_SPECIFIC_PASSWORD" \
            --verbose
